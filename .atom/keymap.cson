# Your keymap
#
# Atom keymaps work similarly to stylesheets. Just as stylesheets use selectors
# to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# '.editor':
#   'enter': 'editor:newline'
#
# '.workspace':
#   'ctrl-P': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
".platform-linux":
    "alt-0": "tree-view:toggle-focus"
'body':
    'cmd-q': 'core:close'
    'cmd-shift-q': 'application:quit'
'.tree-view':
    'r': 'tree-view:move'
'.platform-linux .find-and-replace':
    'cmd-alt-enter': 'find-and-replace:replace-all'
'.platform-linux atom-text-editor':
  'cmd-alt-l': 'grammar-selector:show'
  'ctrl-shift-L': 'editor:split-selections-into-lines'
'atom-text-editor[data-grammar="text haml"]:not([mini])':
  'tab': 'emmet:expand-abbreviation-with-tab'
'atom-text-editor.vim-mode':
  'ctrl-shift-c': 'vim-mode:reset-normal-mode'
'atom-text-editor:not([mini])':
  'ctrl-alt-e': 'emmet:expand-abbreviation'
  
